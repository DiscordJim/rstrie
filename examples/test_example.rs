use arbitrary::{Arbitrary, Unstructured};
use rstrie::Trie;




pub fn main() {

    let bytes = [13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 211, 39, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 255, 255, 0, 0, 0, 0, 0, 0, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 14, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 60, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 129, 1, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 48, 0, 63, 0, 25, 1, 25, 52, 52, 52, 52, 52, 255, 255, 255, 255, 63, 0, 0, 4, 0, 2, 52, 243, 52, 52, 255, 255, 255, 39, 25, 25, 118, 118, 118, 118, 118, 118, 4, 0, 0, 0, 0, 0, 0, 0, 118, 118, 118, 255, 255, 255, 255, 255, 255, 23, 242, 118, 118, 118, 118, 118, 118, 138, 137, 137, 137, 118, 109, 50, 118, 118, 118, 118, 37, 118, 118, 118, 118, 118, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let mut unstrc = Unstructured::new(&bytes);
    let mut bruh = Trie::<char, u64>::arbitrary(&mut unstrc).unwrap();
}


